import requests
import random
import string
import hashlib
import os
import time
import math
import json
import sys
from datetime import datetime
from random import randint
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt
from rich.columns import Columns
from faker import Faker
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
import uuid
import re
from bs4 import BeautifulSoup

console = Console()

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ KHAI B√ÅO H√ÄM TI·ªÜN √çCH ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

def bongoc(so):
    console.print(Panel.fit("‚îÄ" * so, style="red", title=""))

def hoanthanh(dem, id, type, msg, xu):
    uid = id.split('_')[1] if '_' in id else id
    time = datetime.now().strftime("%H:%M:%S")
    console.print(Panel.fit(
        f"[red][{dem}][red] | [cyan]{time}[red] | [cyan]{type}[red] | [yellow]{uid}[red] | [green]{msg}[red] | [yellow]{xu}[red]",
        style="red", title="HO√ÄN TH√ÄNH"
    ))

def error(id, type):
    time = datetime.now().strftime("%H:%M:%S")
    uid = id.split('_')[1] if '_' in id else id
    console.print(Panel.fit(
        f"ƒêang L·ªói G√¨ ƒê√≥ Mong Th√¥ng C·∫£m Nh√© | ID: {uid} | Type: {type} | Time: {time}",
        style="red", title="L·ªñI"
    ))
    time.sleep(2)

def chongblock(delaybl):
    for i in range(delaybl, -1, -1):
        console.print(Panel.fit(
            f"ƒêang ho·∫°t ƒë·ªông ch·ªëng block s·∫Ω ch·∫°y l·∫°i sau {i} gi√¢y",
            style="yellow", title="CH·ªêNG BLOCK"
        ), end='\r')
        time.sleep(1)
        console.print(" " * 50, end='\r')

def nghingoi(delaymin, delaymax):
    delay = randint(delaymin, delaymax)
    for i in range(delay, -1, -1):
        time.sleep(1)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ L·ªöP FACEBOOK API ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
class Facebook_Api:
    def __init__(self, cookie):
        self.cookie = cookie
        self.user_id = cookie.split('c_user=')[1].split(';')[0]
        self.headers = {
            'authority': 'mbasic.facebook.com',
            'cache-control': 'max-age=0',
            'sec-ch-ua': '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'upgrade-insecure-requests': '1',
            'origin': 'https://mbasic.facebook.com',
            'content-type': 'application/x-www-form-urlencoded',
            'user-agent': 'Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-user': '?1',
            'sec-fetch-dest': 'document',
            'referer': 'https://mbasic.facebook.com/',
            'accept-language': 'en-US,en;q=0.9',
            'cookie': cookie
        }

    def get_thongtin(self):
        try:
            home = requests.get('https://mbasic.facebook.com/profile.php', headers=self.headers).text
            self.fb_dtsg = home.split('<input type="hidden" name="fb_dtsg" value="')[1].split('"')[0]
            self.jazoest = home.split('<input type="hidden" name="jazoest" value="')[1].split('"')[0]
            ten = home.split('<title>')[1].split('</title>')[0]
            return ten, self.user_id
        except:
            return 0

    # (C√°c h√†m follow, page, group, reac_cmt, like, comment, share gi·ªØ nguy√™n nh∆∞ m√£ g·ªëc)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ L·ªöP TRAO ƒê·ªîI SUB API ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
class TraoDoiSub_Api:
    def __init__(self, token):
        self.token = token

    def main(self):
        try:
            main = requests.get('https://traodoisub.com/api/?fields=profile&access_token=' + self.token).json()
            return main['data'] if 'data' in main else False
        except:
            return False

    # (C√°c h√†m run, get_job, nhan_xu gi·ªØ nguy√™n nh∆∞ m√£ g·ªëc)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ BANNER V√Ä GIAO DI·ªÜN ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def banner():
    # Panel th√¥ng tin admin (k√®m Tool by...)
    admin_panel = Panel.fit(
        """[bold blue]Tool by:[/] [bold pink]ƒêƒÉng Qu√¢n [bold green]x [bold red]ƒêƒÉng Khoa
        
[bold cyan]Facebook Admin 1:[/] facebook.com/admin1
[bold cyan]Facebook Admin 2:[/] facebook.com/admin2
[bold yellow]Zalo Admin:[/] 039xxxx / 039xxxx
[bold red]YouTube:[/] youtube.com/xxxx
[bold blue]Box Zalo:[/] zalo.me/xxx""",
        title="[bold white]Li√™n h·ªá Admin",
        border_style="green"
    )

    # L·∫•y th·ªùi gian hi·ªán t·∫°i
    now = datetime.now()
    time_str = now.strftime("%H:%M:%S")
    date_str = now.strftime("%d/%m/%Y")

    # Chuy·ªÉn sang l·ªãch √¢m
    solar = Solar(now.year, now.month, now.day)
    lunar = Converter.Solar2Lunar(solar)
    lunar_str = f"{lunar.day}/{lunar.month}/{lunar.year} (√Çm l·ªãch)"

    # Panel th·ªùi gian & ng√†y th√°ng
    time_panel = Panel.fit(
        f"[bold cyan]‚è∞ Gi·ªù hi·ªán t·∫°i:[/] {time_str}\n"
        f"[bold green]üìÖ D∆∞∆°ng l·ªãch:[/] {date_str}\n"
        f"[bold magenta]üåô √Çm l·ªãch:[/] {lunar_str}",
        title="[bold white]üïì Th·ªùi Gian",
        border_style="bright_blue"
    )

    # Hi·ªÉn th·ªã song song 2 c·ªôt
    console.print(Columns([admin_panel, time_panel]))
    
def Nhap_Cookie():
    list_cookie = []
    i = 0
    while True:
        i += 1
        cookie = Prompt.ask(f"[cyan][>] => [/cyan][green]Nh·∫≠p Cookie Facebook Th·ª©: {i}[/green]")
        if not cookie and i > 1:
            break
        fb = Facebook_Api(cookie)
        name = fb.get_thongtin()
        if name != 0:
            ten = name[0]
            console.print(Panel.fit(
                f"T√™n Facebook: [green]{ten}[/green]",
                style="red", title="TH√ÄNH C√îNG"
            ))
            list_cookie.append(cookie)
        else:
            console.print(Panel.fit(
                "Cookie Facebook Die! Vui L√≤ng Nh·∫≠p L·∫°i!!!",
                style="red", title="TH·∫§T B·∫†I"
            ))
    return list_cookie

def main():
    banner()
    while True:
        if os.path.exists('configtds.txt'):
            with open('configtds.txt', 'r') as f:
                token = f.read()
            tds = TraoDoiSub_Api(token)
            data = tds.main()
            try:
                console.print(Panel.fit(
                    f"Gi·ªØ L·∫°i T√†i Kho·∫£n: [green]{data['user']}[/green]",
                    style="blue", title="TH√îNG B√ÅO"
                ))
                console.print(Panel.fit(
                    "Nh·∫≠p [1] Gi·ªØ Access Token | Nh·∫≠p [2] Nh·∫≠p M·ªõi",
                    style="blue", title="L·ª∞A CH·ªåN"
                ))
                chon = Prompt.ask("[cyan][>] => [/cyan][green]Nh·∫≠p ===>[/green]")
                if chon == '2':
                    os.remove('configtds.txt')
                elif chon == '1':
                    pass
                else:
                    console.print(Panel.fit(
                        "L·ª±a ch·ªçn kh√¥ng x√°c ƒë·ªãnh!!!",
                        style="red", title="L·ªñI"
                    ))
                    bongoc(14)
                    continue
            except:
                os.remove('configtds.txt')
        if not os.path.exists('configtds.txt'):
            token = Prompt.ask("[cyan][>] => [/cyan][green]Nh·∫≠p Access Token TDS:[/green]")
            with open('configtds.txt', 'w') as f:
                f.write(token)
        with open('configtds.txt', 'r') as f:
            token = f.read()
        tds = TraoDoiSub_Api(token)
        data = tds.main()
        try:
            xu = data['xu']
            xudie = data['xudie']
            user = data['user']
            break
        except:
            console.print(Panel.fit(
                "Access Token Kh√¥ng H·ª£p L·ªá! Xin Th·ª≠ L·∫°i",
                style="red", title="L·ªñI"
            ))
            os.remove('configtds.txt')
            continue
        console.print(Panel.fit(
            f"T√™n T√†i Kho·∫£n: [green]{user}[/green] | Xu: [yellow]{xu}[/yellow] | Xu B·ªã Ph·∫°t: [red]{xudie}[/red]",
            style="blue", title="TH√îNG TIN T√ÄI KHO·∫¢N"
        ))

        # (Ph·∫ßn nh·∫≠p cookie v√† ch·∫°y nhi·ªám v·ª• gi·ªØ nguy√™n logic, ch·ªâ thay ƒë·ªïi giao di·ªán b·∫±ng Panel)

if __name__ == '__main__':
    main()
